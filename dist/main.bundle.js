(()=>{"use strict";var n={147:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,"#popup-frame{background-color:rgba(0,0,0,.62);top:0;left:0;right:0;height:100vh}#popup-frame #popup-inner{max-height:80vh;background-color:#fff;color:#000;overflow-y:scroll}#popup-frame #popup-close{z-index:10;top:5px;right:8px}#popup-frame ul{padding:0}#popup-frame li{list-style:none;white-space:nowrap}#popup-frame form>*{margin-bottom:.5rem}#popup-frame h2 span{font-size:1rem}*{margin:0%;padding:0%}body{min-height:100vh;display:flex;flex-direction:column}.cursor-pointer{cursor:pointer !important}a:link{color:#f09e41}footer{background-color:#2e1223;color:#f09e41;font-weight:600;justify-self:end}button{border:none;background-color:inherit}.footer1{width:100%;padding:5vh 5%;display:flex;justify-content:space-between;align-items:center}.footer1 button{background-color:#f09e41;color:#2e1223;border:none}.footer2{width:100%;text-align:center}.value-drop{color:red}.value-increase{color:green}ul{list-style:none;padding:0%}.main{margin:0% 5%}.homeTitle{color:#2e1223}.listContainer{display:flex;flex-direction:column}.coins{padding:0%;display:grid;grid-template-columns:repeat(4, 1fr)}.coinImage{width:50px;height:50px}.listTitles{font-weight:700;background-color:#f09e41;color:#2e1223}.listTitles,.coin{padding:5px;border:1px solid #f09e41;border-radius:25px;margin:10px;box-shadow:3px 3px 6px #2e1223}.coin:hover{scale:1.1}.listTitles li,.coin li{text-align:center}.coinIcons,.likeIcons{justify-self:start}.buyButton{color:green;font-weight:600;margin-left:5px}.pagination{display:flex;justify-content:space-around}.pagination ul{display:flex}.cryptoCounter{padding:5px}.page{display:flex;justify-content:center;align-items:center;font-weight:600;color:#f09e41;background-color:#2e1223;border-radius:50%;margin:10px;cursor:pointer;padding:1px 8px}.commentAddIcon{cursor:pointer}.selectedPage{opacity:.5}.fa-heart{color:#bababe}.liked{color:red}.nameAndLikes{margin-top:20px;display:flex;justify-content:space-evenly}.vertical-align-middle{vertical-align:middle}","",{version:3,sources:["webpack://./src/_popup.scss","webpack://./src/style.scss"],names:[],mappings:"AAAA,aACE,gCAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CAEA,0BACE,eAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CAGF,0BACE,UAAA,CACA,OAAA,CACA,SAAA,CAGF,gBACE,SAAA,CAGF,gBACE,eAAA,CACA,kBAAA,CAIA,oBACE,mBAAA,CAKF,qBACE,cAAA,CCnCN,EACE,SAAA,CACA,UAAA,CAGF,KACE,gBAAA,CACA,YAAA,CACA,qBAAA,CAGF,gBACE,yBAAA,CAGF,OACE,aAAA,CAGF,OACE,wBAAA,CACA,aAAA,CACA,eAAA,CACA,gBAAA,CAGF,OACE,WAAA,CACA,wBAAA,CAGF,SACE,UAAA,CACA,cAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CAGF,gBACE,wBAAA,CACA,aAAA,CACA,WAAA,CAGF,SACE,UAAA,CACA,iBAAA,CAGF,YACE,SAAA,CAGF,gBACE,WAAA,CAGF,GACE,eAAA,CACA,UAAA,CAGF,MACE,YAAA,CAGF,WACE,aAAA,CAGF,eACE,YAAA,CACA,qBAAA,CAGF,OACE,UAAA,CACA,YAAA,CACA,oCAAA,CAGF,WACE,UAAA,CACA,WAAA,CAGF,YACE,eAAA,CACA,wBAAA,CACA,aAAA,CAGF,kBAEE,WAAA,CACA,wBAAA,CACA,kBAAA,CACA,WAAA,CACA,8BAAA,CAGF,YACE,SAAA,CAGF,wBAEE,iBAAA,CAGF,sBAEE,kBAAA,CAGF,WACE,WAAA,CACA,eAAA,CACA,eAAA,CAGF,YACE,YAAA,CACA,4BAAA,CAGF,eACE,YAAA,CAGF,eACE,WAAA,CAGF,MACE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CAGA,aAAA,CACA,wBAAA,CACA,iBAAA,CACA,WAAA,CACA,cAAA,CACA,eAAA,CAGF,gBACE,cAAA,CAGF,cACE,UAAA,CAGF,UACE,aAAA,CAGF,OACE,SAAA,CAGF,cACE,eAAA,CACA,YAAA,CACA,4BAAA,CAGF,uBACE,qBAAA",sourcesContent:["#popup-frame {\r\n  background-color: rgb(0 0 0 / 62%);\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100vh;\r\n\r\n  #popup-inner {\r\n    max-height: 80vh;\r\n    background-color: white;\r\n    color: black;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  #popup-close {\r\n    z-index: 10;\r\n    top: 5px;\r\n    right: 8px;\r\n  }\r\n\r\n  ul {\r\n    padding: 0;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  form {\r\n    > * {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    span {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n}\r\n",'@import "popup";\r\n\r\n* {\r\n  margin: 0%;\r\n  padding: 0%;\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer !important;\r\n}\r\n\r\na:link {\r\n  color: #f09e41;\r\n}\r\n\r\nfooter {\r\n  background-color: #2e1223;\r\n  color: #f09e41;\r\n  font-weight: 600;\r\n  justify-self: end;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  background-color: inherit;\r\n}\r\n\r\n.footer1 {\r\n  width: 100%;\r\n  padding: 5vh 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.footer1 button {\r\n  background-color: #f09e41;\r\n  color: #2e1223;\r\n  border: none;\r\n}\r\n\r\n.footer2 {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.value-drop {\r\n  color: red;\r\n}\r\n\r\n.value-increase {\r\n  color: green;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  padding: 0%;\r\n}\r\n\r\n.main {\r\n  margin: 0% 5%;\r\n}\r\n\r\n.homeTitle {\r\n  color: #2e1223;\r\n}\r\n\r\n.listContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.coins {\r\n  padding: 0%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.coinImage {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.listTitles {\r\n  font-weight: 700;\r\n  background-color: #f09e41;\r\n  color: #2e1223;\r\n}\r\n\r\n.listTitles,\r\n.coin {\r\n  padding: 5px;\r\n  border: 1px solid #f09e41;\r\n  border-radius: 25px;\r\n  margin: 10px;\r\n  box-shadow: 3px 3px 6px #2e1223;\r\n}\r\n\r\n.coin:hover {\r\n  scale: 1.1;\r\n}\r\n\r\n.listTitles li,\r\n.coin li {\r\n  text-align: center;\r\n}\r\n\r\n.coinIcons,\r\n.likeIcons {\r\n  justify-self: start;\r\n}\r\n\r\n.buyButton {\r\n  color: green;\r\n  font-weight: 600;\r\n  margin-left: 5px;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.pagination ul {\r\n  display: flex;\r\n}\r\n\r\n.cryptoCounter {\r\n  padding: 5px;\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  // width: 20px;\r\n  // height: 20px;\r\n  color: #f09e41;\r\n  background-color: #2e1223;\r\n  border-radius: 50%;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  padding: 1px 8px;\r\n}\r\n\r\n.commentAddIcon {\r\n  cursor: pointer;\r\n}\r\n\r\n.selectedPage {\r\n  opacity: 0.5;\r\n}\r\n\r\n.fa-heart {\r\n  color: rgb(186, 186, 190);\r\n}\r\n\r\n.liked {\r\n  color: red;\r\n}\r\n\r\n.nameAndLikes {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.vertical-align-middle {\r\n  vertical-align: middle;\r\n}\r\n\r\n// .likeBtn {\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n// }\r\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);t&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],l=i[s]||0,p="".concat(s," ").concat(l);i[s]=l+1;var d=r(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var m=o(u,t);t.byIndex=A,e.splice(A,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=r(i[a]);e[A].references--}for(var c=t(n,o),s=0;s<i.length;s++){var l=r(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),i=r(569),a=r.n(i),A=r(565),c=r.n(A),s=r(216),l=r.n(s),p=r(589),d=r.n(p),u=r(147),m={};m.styleTagTransform=d(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class f{constructor(n){this.url=n}post(n,e){return fetch([this.url,n].join(""),{method:"POST",body:JSON.stringify(e),headers:{"Content-type":"application/json; charset=UTF-8"}})}get(n){return fetch([this.url,n].join(""))}}const C="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/WXXsCPtk675NtAM8NnCG/",g=new f("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false"),h=new f(C),v=async()=>{const n=await(async n=>(await n.get("likes")).json())(h);document.querySelectorAll(".likeBtn").forEach((e=>{const r=e.id.split("-")[1],t=n.filter((n=>n.item_id===r))[0];e.querySelector("p").innerHTML=t?`${t.likes} Likes`:"0 Likes"}))},y=()=>{document.querySelectorAll(".likeBtn").forEach((n=>n.addEventListener("click",(async()=>{var e,r;e=n.id.split("-")[1],h.post("likes",{item_id:e}),(r=n.querySelector("p")).innerHTML=`${parseInt(r.textContent.split(" ")[0],10)+1} likes`,n.querySelector(".fa-heart").classList.add("liked")}))))};function x(n){(function(n){return fetch(`${C}comments?item_id=${n}`).then((n=>200===n.status&&n.json()))})(n).then((n=>{if(n.length>0){const e=document.querySelector("#comments");e.innerHTML=`<h3 class="fw-bolder fs-5">Comments (${n.length})</h3>`,n.forEach((n=>{const{creation_date:r,comment:t,username:o}=n,i=document.createElement("p");i.innerText=`${r} - ${t} - by ${o}`,i.classList.add("text-start"),e.appendChild(i)})),e.classList.remove("d-none")}}))}const b=n=>n.toString().split(".").map(((n,e)=>0===e?n.split("").reverse().map(((n,e)=>e%3==0&&e>0?`${n},`:n)).reverse().join(""):n)).join("."),k=n=>n>0?Math.floor(n):Math.ceil(n),E="usd",w={usd:"$"},B=n=>{const e=document.querySelector("#popup-frame"),r=e.querySelector("#popup-inner");e.classList.remove("d-none"),(n=>fetch((n=>`https://api.coingecko.com/api/v3/coins/${n}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`)(n)).then((n=>n.json())))(n).then((n=>{r.innerHTML="";const{name:e,symbol:t,image:{large:o},market_data:{current_price:{[E]:i}},market_data:{market_cap:{[E]:a}},market_data:{total_volume:{[E]:A}},market_data:{price_change_percentage_24h:c,price_change_percentage_1y:s}}=n;r.innerHTML+=`\n            <div class="position-relative p-3 m-3 border border-2 border-dark">\n                <span class="position-absolute cursor-pointer" id="popup-close">X</span>\n                <img src="${o}">            \n                <h2 class="mt-3">${e}</h2>\n                <div class="mb-3">\n                    24H: <span ${0!==k(c)&&"class="+(c<0?"value-drop":"value-increase")}>${k(c)?`${k(c)}%`:"-"}</span>\n                    1Y: <span ${0!==k(s)&&"class="+(s<0?"value-drop":"value-increase")}>${k(s)?`${k(s)}%`:"-"}</span >\n                </div >\n                <div class="row row-cols-2">\n                    <div class="d-flex justify-content-center">\n                    <ul class="text-start">\n                        <li>Symbol: ${t.toUpperCase()}</li>\n                        <li>Price: ${w[E]}${b(i)}</li>\n                    </ul>\n                    </div>\n                    <div class="d-flex justify-content-center">\n                    <ul class="text-start">\n                        <li>Market Cap: ${w[E]}${b(a)}</li>\n                        <li>Total Volume: ${w[E]}${b(A)}</li>\n                    </ul>\n                    </div>\n                </div>\n                <div>\n                  <div id="comments" class="d-none">\n                  </div>\n                  <h3 class="fw-bolder fs-5">Add Comment</h3>\n                  <form id="submit-form" class="d-flex flex-column align-items-center row row-cols-md-2 row-cols-lg-3">\n                    <div>\n                      <input class="form-control" type="text" name="username" placeholder="username">\n                      <textarea class="form-control mt-2" type="text" name="comment" placeholder="write your comment here"></textarea>\n                      <button class="btn btn-info text-white mt-2">Submit</button>\n                    </div>\n                  </form>\n                </div>\n            </div > `})).then((()=>{document.querySelector("#popup-close").addEventListener("click",(()=>{e.classList.add("d-none")}))})).then((()=>x(n))).then((()=>{return e=n,void document.querySelector("#submit-form button").addEventListener("click",(n=>{n.preventDefault();const r=document.querySelector("#submit-form"),{username:{value:t},comment:{value:o}}=r;var i;(i=JSON.stringify({item_id:e,username:t,comment:o}),fetch(`${C}comments`,{method:"POST",headers:{"Content-Type":"application/json"},body:i})).then((n=>201===n.status&&x(e))).then((()=>r.reset()))}));var e}))},F=()=>{document.querySelectorAll(".coins > li").forEach((n=>{n.querySelector(".commentAddIcon").addEventListener("click",(n=>{const e=n.currentTarget.id;B(e)}))}))},S=(n,e,r,t=0)=>{var o,i;r.innerHTML=`Total Coins (${o=n,o.length})`,e.innerHTML="";for(let r=t;r<t+20;r+=1)e.innerHTML+=`\n                <li class="d-flex">\n                  <ul class="coin w-100 d-flex flex-column">\n                      <li class="coinIcons"><img class="coinImage mx-1 my-1" src=${(i=n[r]).image} alt='coin'/></li>\n                      <li><strong>${i.name} (${i.symbol.toUpperCase()})</strong></li>\n                      <span class="h-100"></span>\n                      <li>$${b(i.current_price)}</li>\n                      <li class="likeIcons my-2"><button id='likeBtn-${i.id}' class="likeBtn" > <i class="fas fa-heart"></i><p class="my-1"></p></button></li>\n                      <li id=${i.id} class="commentAddIcon mb-1">Comments \n                          <i class="fas fa-comment-alt vertical-align-middle" ></i>\n                      </li>\n                   </ul>\n                </li>`},G=document.querySelector(".coins"),$=document.querySelector(".cryptoCounter"),T=document.querySelectorAll(".page");(async n=>(await n.get()).json())(g).then((n=>{S(n,G,$),v().then((()=>{y(),F()})),((n,e,r,t)=>{n.forEach((o=>{o.addEventListener("click",(()=>{n.forEach((n=>n.classList.remove("selectedPage"))),o.classList.add("selectedPage"),S(e,r,t,20*o.id),v().then((()=>{y(),F()}))}))}))})(T,n,G,$)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,