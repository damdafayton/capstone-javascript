(()=>{"use strict";var n={147:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"*{margin:0%;padding:0%}.cursor-pointer{cursor:pointer !important}li{white-space:nowrap}footer{padding:5vh 1% 0% 1%;background-color:#2e1223;color:#f09e41;font-weight:600}.footer1{width:100%;padding:5vh 5%;display:flex;justify-content:space-between;align-items:center}.footer1 button{background-color:#f09e41;color:#2e1223;border:none}.footer2{width:100%;text-align:center}#popup-frame{background-color:rgba(0,0,0,.62);top:0;left:0;right:0;height:100vh}#popup-frame #popup-inner{max-height:80vh;background-color:#fff;color:#000;overflow-y:scroll}#popup-frame #popup-close{z-index:10;top:5px;right:8px}#popup-frame ul{padding:0}#popup-frame li{list-style:none}#popup-frame form>*{margin-bottom:.5rem}h2 span{font-size:1rem}.value-drop{color:red}.value-increase{color:green}ul{list-style:none;padding:0%}.listContainer{margin:7vh 0%}.coins{padding:0%}.coinImage{width:30px;height:30px;margin-right:10px}.listTitles{font-weight:600}.listTitles,.coin{padding:5px;border:1px solid #000;border-radius:25px;display:grid;grid-template-columns:1fr 3fr 1fr 2fr 1fr 3fr;margin:10px 0%}.listTitles li,.coin li{text-align:center}.coinIcons{justify-self:start}.buyButton{border:none;background-color:inherit;color:green;font-weight:600;margin-left:5px}.pagination{display:flex;justify-content:space-around}.pagination ul{display:flex}.page{display:flex;justify-content:center;align-items:center;font-weight:600;width:20px;height:20px;color:#f09e41;background-color:#2e1223;border-radius:50%;margin:10px;cursor:pointer}.selectedPage{opacity:.5}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,EACI,SAAA,CACA,UAAA,CAGJ,gBACI,yBAAA,CAGJ,GACI,kBAAA,CAGJ,OACI,oBAAA,CACA,wBAAA,CACA,aAAA,CACA,eAAA,CAGJ,SACI,UAAA,CACA,cAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CAGJ,gBACI,wBAAA,CACA,aAAA,CACA,WAAA,CAGJ,SACI,UAAA,CACA,iBAAA,CAGJ,aACI,gCAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CAEA,0BACI,eAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CAGJ,0BACI,UAAA,CACA,OAAA,CACA,SAAA,CAGJ,gBACI,SAAA,CAGJ,gBACI,eAAA,CAIA,oBACI,mBAAA,CAMR,QACI,cAAA,CAIR,YACI,SAAA,CAGJ,gBACI,WAAA,CAGJ,GACI,eAAA,CACA,UAAA,CAGJ,eACI,aAAA,CAGJ,OACI,UAAA,CAGJ,WACI,UAAA,CACA,WAAA,CACA,iBAAA,CAOJ,YACI,eAAA,CAGJ,kBAEI,WAAA,CACA,qBAAA,CACA,kBAAA,CACA,YAAA,CACA,6CAAA,CACA,cAAA,CAGJ,wBAEI,iBAAA,CAGJ,WACI,kBAAA,CAGJ,WACI,WAAA,CACA,wBAAA,CACA,WAAA,CACA,eAAA,CACA,eAAA,CAGJ,YACI,YAAA,CACA,4BAAA,CAGJ,eACI,YAAA,CAGJ,MACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,aAAA,CACA,wBAAA,CACA,iBAAA,CACA,WAAA,CACA,cAAA,CAGJ,cACI,UAAA",sourcesContent:["* {\r\n    margin: 0%;\r\n    padding: 0%;\r\n}\r\n\r\n.cursor-pointer {\r\n    cursor: pointer !important;\r\n}\r\n\r\nli {\r\n    white-space: nowrap;\r\n}\r\n\r\nfooter {\r\n    padding: 5vh 1% 0% 1%;\r\n    background-color: #2e1223;\r\n    color: #f09e41;\r\n    font-weight: 600;\r\n}\r\n\r\n.footer1 {\r\n    width: 100%;\r\n    padding: 5vh 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.footer1 button {\r\n    background-color: #f09e41;\r\n    color: #2e1223;\r\n    border: none;\r\n}\r\n\r\n.footer2 {\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n\r\n#popup-frame {\r\n    background-color: rgb(0 0 0 / 62%);\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n\r\n    #popup-inner {\r\n        max-height: 80vh;\r\n        background-color: white;\r\n        color: black;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    #popup-close {\r\n        z-index: 10;\r\n        top: 5px;\r\n        right: 8px;\r\n    }\r\n\r\n    ul {\r\n        padding: 0;\r\n    }\r\n\r\n    li {\r\n        list-style: none;\r\n    }\r\n\r\n    form {\r\n        > * {\r\n            margin-bottom: 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\nh2 {\r\n    span {\r\n        font-size: 1rem;\r\n    }\r\n}\r\n\r\n.value-drop {\r\n    color: red;\r\n}\r\n\r\n.value-increase {\r\n    color: green;\r\n}\r\n\r\nul {\r\n    list-style: none;\r\n    padding: 0%;\r\n}\r\n\r\n.listContainer {\r\n    margin: 7vh 0%;\r\n}\r\n\r\n.coins {\r\n    padding: 0%;\r\n}\r\n\r\n.coinImage {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 10px;\r\n}\r\n\r\n// .coins {\r\n//     color: blue;\r\n//     background-color: black;\r\n// }\r\n.listTitles {\r\n    font-weight: 600;\r\n}\r\n\r\n.listTitles,\r\n.coin {\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    border-radius: 25px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr 1fr 2fr 1fr 3fr;\r\n    margin: 10px 0%;\r\n}\r\n\r\n.listTitles li,\r\n.coin li {\r\n    text-align: center;\r\n}\r\n\r\n.coinIcons {\r\n    justify-self: start;\r\n}\r\n\r\n.buyButton {\r\n    border: none;\r\n    background-color: inherit;\r\n    color: green;\r\n    font-weight: 600;\r\n    margin-left: 5px;\r\n}\r\n\r\n.pagination {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\n.pagination ul {\r\n    display: flex;\r\n}\r\n\r\n.page {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 600;\r\n    width: 20px;\r\n    height: 20px;\r\n    color: #f09e41;\r\n    background-color: #2e1223;\r\n    border-radius: 50%;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n}\r\n\r\n.selectedPage {\r\n    opacity: 0.5;\r\n}\r\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=t.base?s[0]+t.base:s[0],l=a[A]||0,p="".concat(A," ").concat(l);a[A]=l+1;var u=r(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var f=o(d,t);t.byIndex=c,e.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var s=t(n,o),A=0;A<a.length;A++){var l=r(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),i=r.n(a),c=r(565),s=r.n(c),A=r(216),l=r.n(A),p=r(589),u=r.n(p),d=r(147),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(d.Z,f),d.Z&&d.Z.locals&&d.Z.locals;const m=new class{constructor(n){this.url=n}post(n,e){return fetch([this.url,n].join(""),{method:"POST",body:JSON.stringify(e),headers:{"Content-type":"application/json; charset=UTF-8"}})}get(n){return fetch([this.url,n].join(""))}}("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false"),C="WXXsCPtk675NtAM8NnCG",g="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/";function h(n){return fetch(`${g+C}/comments?item_id=${n}`).then((n=>200===n.status&&n.json())).then((n=>{if(console.log(n),n.length>0){const e=document.querySelector("#comments");e.innerHTML="",n.forEach((n=>{const{creation_date:r,comment:t,username:o}=n,a=document.createElement("p");a.innerText=`${r} - ${t} - by ${o}`,a.classList.add("text-start"),e.appendChild(a)})),e.classList.remove("d-none")}}))}const v=n=>n.toString().split("").reverse().map(((n,e)=>e%3==0&&e>0?`${n},`:n)).reverse().join(""),y=n=>n>0?Math.floor(n):Math.ceil(n),b="usd",x={usd:"$"};(async(n,e)=>{const r=await(async n=>(await n.get()).json())(n);console.log(r),e.innerHTML="",console.log("tag element::",e);for(let n=0;n<10;n+=1)e.innerHTML+=`<li><ul class="coin">\n                       <li>${(t=r[n]).market_cap_rank}</li>\n                       <li class="coinIcons"><img class="coinImage" src=${t.image} alt='coin'/><strong>${t.name}</strong></li>\n                       <li>${t.symbol}\n                       <button class="buyButton">Buy\n                       <i class="fas fa-shopping-basket"></i></button>\n                       </li>\n                       <li> ${t.current_price}$</li>\n                       <li style="color:${t.price_change_percentage_24h>0?"green":"red"}">${t.price_change_percentage_24h}</li>\n                       <li>${t.circulating_supply}</li>\n                   </ul>\n                </li>`;var t})(m,document.querySelector(".coins")).then((()=>{document.querySelectorAll(".coins > li").forEach((n=>{n.querySelector(".buyButton").addEventListener("click",(()=>{const e=n.querySelector(".coinIcons > strong").innerText;console.log(e),(n=>{const e=document.querySelector("#popup-frame"),r=e.querySelector("#popup-inner");e.classList.remove("d-none"),fetch((n=>`https://api.coingecko.com/api/v3/coins/${n}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`)(n)).then((n=>n.json())).then((n=>{r.innerHTML="",console.log(n);const{name:e,symbol:t,image:{large:o},market_data:{current_price:{[b]:a}},market_data:{market_cap:{[b]:i}},market_data:{total_volume:{[b]:c}},market_data:{price_change_percentage_24h:s,price_change_percentage_1y:A}}=n;r.innerHTML+=`\n            <div class="position-relative p-3 m-3 border border-2 border-dark">\n                <span class="position-absolute cursor-pointer" id="popup-close">X</span>\n                <img src="${o}">            \n                <h2 class="mt-3">${e}</h2>\n                <div class="mb-3">\n                    24H: <span class=${s<0?"value-drop":"value-increase"}>${y(s)}%</span>\n                    1Y: <span class=${A<0?"value-drop":"value-increase"}>${y(A)}%</span>\n                </div>\n                <div class="row row-cols-2">\n                    <div class="d-flex justify-content-center">\n                    <ul class="text-start">\n                        <li>Symbol: ${t.toUpperCase()}</li>\n                        <li>Price: ${x[b]}${v(a)}</li>\n                    </ul>\n                    </div>\n                    <div class="d-flex justify-content-center">\n                    <ul class="text-start">\n                        <li>Market Cap: ${x[b]}${v(i)}</li>\n                        <li>Total Volume: ${x[b]}${v(c)}</li>\n                    </ul>\n                    </div>\n                </div>\n                <div>\n                  <div id="comments" class="d-none">\n                    <p class="fw-bolder">Comments</p> \n                  </div>\n                  <p class="fw-bolder">Add Comment</p>\n                  <form id="submit-form" class="d-flex flex-column align-items-center row row-cols-md-2 row-cols-lg-3">\n                    <input type="text" name="username" placeholder="username">\n                    <textarea type="text" name="comment" placeholder="write your comment here"></textarea>\n                    <button>Submit</button>\n                  </form>\n                </div>\n            </div>`})).then((()=>{document.querySelector("#popup-close").addEventListener("click",(()=>{e.classList.add("d-none")}))})).then((async()=>{await h(n),function(n){const e=document.querySelector("#submit-form > button");console.log("comment submit handler ",e),e.addEventListener("click",(r=>{r.preventDefault();const t=e.parentElement,{username:{value:o},comment:{value:a}}=t;console.log({id:n,username:o,comment:a}),fetch(`${g+C}/comments`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:o,comment:a})}).then((e=>201===e.status&&h(n)))}))}(n)}))})("bitcoin")}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,