(()=>{"use strict";var n={147:(n,r,e)=>{e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,"*{margin:0%;padding:0%}.cursor-pointer{cursor:pointer !important}li{white-space:nowrap}footer{padding:5vh 1% 0% 1%;background-color:#2e1223;color:#f09e41;font-weight:600}.footer1{width:100%;padding:5vh 5%;display:flex;justify-content:space-between;align-items:center}.footer1 button{background-color:#f09e41;color:#2e1223;border:none}.footer2{width:100%;text-align:center}#popup-frame{background-color:rgba(0,0,0,.62);top:0;left:0;width:100vw;height:100vh}#popup-frame #popup-inner{max-height:80vh;background-color:#fff;color:#000}#popup-frame #popup-close{z-index:10;top:5px;right:8px}#popup-frame ul{padding:0}#popup-frame li{list-style:none}h2 span{font-size:1rem}.value-drop{color:red}.value-increase{color:green}ul{list-style:none;padding:0%}.listContainer{margin:7vh 0%;display:flex;flex-direction:column}.cryptoCounter{align-self:flex-end;margin-right:30px}.coins{padding:0%}.coinImage{width:30px;height:30px;margin-right:10px}.listTitles{font-weight:600}.listTitles,.coin{padding:5px;border:1px solid #000;border-radius:25px;display:grid;grid-template-columns:1fr 3fr 1fr 2fr 1fr 3fr;margin:10px 0%}.listTitles li,.coin li{text-align:center}.coinIcons{justify-self:start}.buyButton{border:none;background-color:inherit;color:green;font-weight:600;margin-left:5px}.pagination{display:flex;justify-content:space-around}.pagination ul{display:flex}.page,.cryptoCounter{display:flex;justify-content:center;align-items:center;font-weight:600;color:#f09e41;background-color:#2e1223;border-radius:50%;margin:10px;cursor:pointer}.page{padding:1px 8px}.cryptoCounter{padding:5px}.selectedPage{opacity:.5}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,EACE,SAAA,CACA,UAAA,CAGF,gBACE,yBAAA,CAGF,GACE,kBAAA,CAGF,OACE,oBAAA,CACA,wBAAA,CACA,aAAA,CACA,eAAA,CAGF,SACE,UAAA,CACA,cAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CAGF,gBACE,wBAAA,CACA,aAAA,CACA,WAAA,CAGF,SACE,UAAA,CACA,iBAAA,CAGF,aACE,gCAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CAEA,0BACE,eAAA,CACA,qBAAA,CACA,UAAA,CAGF,0BACE,UAAA,CACA,OAAA,CACA,SAAA,CAGF,gBACE,SAAA,CAGF,gBACE,eAAA,CAKF,QACE,cAAA,CAIJ,YACE,SAAA,CAGF,gBACE,WAAA,CAGF,GACE,eAAA,CACA,UAAA,CAGF,eACE,aAAA,CACA,YAAA,CACA,qBAAA,CAGF,eACE,mBAAA,CACA,iBAAA,CAGF,OACE,UAAA,CAGF,WACE,UAAA,CACA,WAAA,CACA,iBAAA,CAOF,YACE,eAAA,CAGF,kBAEE,WAAA,CACA,qBAAA,CACA,kBAAA,CACA,YAAA,CACA,6CAAA,CACA,cAAA,CAGF,wBAEE,iBAAA,CAGF,WACE,kBAAA,CAGF,WACE,WAAA,CACA,wBAAA,CACA,WAAA,CACA,eAAA,CACA,eAAA,CAGF,YACE,YAAA,CACA,4BAAA,CAGF,eACE,YAAA,CAGF,qBACE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CAGA,aAAA,CACA,wBAAA,CACA,iBAAA,CACA,WAAA,CACA,cAAA,CAGF,MACE,eAAA,CAGF,eACE,WAAA,CAGF,cACE,UAAA",sourcesContent:["* {\r\n  margin: 0%;\r\n  padding: 0%;\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer !important;\r\n}\r\n\r\nli {\r\n  white-space: nowrap;\r\n}\r\n\r\nfooter {\r\n  padding: 5vh 1% 0% 1%;\r\n  background-color: #2e1223;\r\n  color: #f09e41;\r\n  font-weight: 600;\r\n}\r\n\r\n.footer1 {\r\n  width: 100%;\r\n  padding: 5vh 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.footer1 button {\r\n  background-color: #f09e41;\r\n  color: #2e1223;\r\n  border: none;\r\n}\r\n\r\n.footer2 {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n#popup-frame {\r\n  background-color: rgb(0 0 0 / 62%);\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  #popup-inner {\r\n    max-height: 80vh;\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n\r\n  #popup-close {\r\n    z-index: 10;\r\n    top: 5px;\r\n    right: 8px;\r\n  }\r\n\r\n  ul {\r\n    padding: 0;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n}\r\n\r\nh2 {\r\n  span {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n\r\n.value-drop {\r\n  color: red;\r\n}\r\n\r\n.value-increase {\r\n  color: green;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  padding: 0%;\r\n}\r\n\r\n.listContainer {\r\n  margin: 7vh 0%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.cryptoCounter {\r\n  align-self: flex-end;\r\n  margin-right: 30px;\r\n}\r\n\r\n.coins {\r\n  padding: 0%;\r\n}\r\n\r\n.coinImage {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n}\r\n\r\n// .coins {\r\n//     color: blue;\r\n//     background-color: black;\r\n// }\r\n.listTitles {\r\n  font-weight: 600;\r\n}\r\n\r\n.listTitles,\r\n.coin {\r\n  padding: 5px;\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr 1fr 2fr 1fr 3fr;\r\n  margin: 10px 0%;\r\n}\r\n\r\n.listTitles li,\r\n.coin li {\r\n  text-align: center;\r\n}\r\n\r\n.coinIcons {\r\n  justify-self: start;\r\n}\r\n\r\n.buyButton {\r\n  border: none;\r\n  background-color: inherit;\r\n  color: green;\r\n  font-weight: 600;\r\n  margin-left: 5px;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.pagination ul {\r\n  display: flex;\r\n}\r\n\r\n.page, .cryptoCounter {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  // width: 20px;\r\n  // height: 20px;\r\n  color: #f09e41;\r\n  background-color: #2e1223;\r\n  border-radius: 50%;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.page {\r\n  padding: 1px 8px;\r\n}\r\n\r\n.cryptoCounter {\r\n  padding: 5px;\r\n}\r\n\r\n.selectedPage {\r\n  opacity: 0.5;\r\n}\r\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);t&&i[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),A="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([A]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var A={},i=[],a=0;a<n.length;a++){var c=n[a],s=t.base?c[0]+t.base:c[0],l=A[s]||0,p="".concat(s," ").concat(l);A[s]=l+1;var u=e(p),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)r[u].references++,r[u].updater(d);else{var C=o(d,t);t.byIndex=a,r.splice(a,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var A=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=e(A[i]);r[a].references--}for(var c=t(n,o),s=0;s<A.length;s++){var l=e(A[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}A=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var A=e.sourceMap;A&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var A=r[t]={id:t,exports:{}};return n[t](A,A.exports,e),A.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),A=e(569),i=e.n(A),a=e(565),c=e.n(a),s=e(216),l=e.n(s),p=e(589),u=e.n(p),d=e(147),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),r()(d.Z,C),d.Z&&d.Z.locals&&d.Z.locals;const f=new class{constructor(n){this.url=n}post(n,r){return fetch([this.url,n].join(""),{method:"POST",body:JSON.stringify(r),headers:{"Content-type":"application/json; charset=UTF-8"}})}get(n){return fetch([this.url,n].join(""))}}("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false"),g=document.querySelector(".coins"),h=document.querySelector(".cryptoCounter"),m=document.querySelectorAll(".page");(async(n,r,e,t=0)=>{const o=await(async n=>(await n.get()).json())(n);var A;console.log(o),e.innerHTML=o.length,r.innerHTML="",console.log("tag element::",r);for(let n=t;n<10;n+=1)r.innerHTML+=`<li><ul class="coin">\n                       <li>${(A=o[n]).market_cap_rank}</li>\n                       <li class="coinIcons"><img class="coinImage" src=${A.image} alt='coin'/><strong>${A.name}</strong></li>\n                       <li>${A.symbol}\n                       <button class="buyButton">Buy\n                       <i class="fas fa-shopping-basket"></i></button>\n                       </li>\n                       <li> ${A.current_price}$</li>\n                       <li style="color:${A.price_change_percentage_24h>0?"green":"red"}">${A.price_change_percentage_24h}</li>\n                       <li>${A.circulating_supply}</li>\n                   </ul>\n                </li>`})(f,g,h),console.log("hallo",m),displayPage(m,f,g,h)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,